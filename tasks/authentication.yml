---
- name: "Authentication | enable public key authentication"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PubkeyAuthentication'
    line: 'PubkeyAuthentication yes'
    validate: sshd -f %s -t

- name: "Authentication | configure password authentication as {{ password_auth | ternary('yes', 'no') }}"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication {{ password_auth | ternary("yes", "no") }}'
    validate: sshd -f %s -t

- name: "Check if there is an SSH config forced by cloud-init"
  register: sshd_cloud_init
  ansible.builtin.stat:
    path: "/etc/ssh/sshd_config.d/50-cloud-init.conf"

- name: "Authentication | override password authentication by cloud-init as {{ password_auth | ternary('yes', 'no') }}"
  when: sshd_cloud_init.stat.exists
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config.d/50-cloud-init.conf"
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication {{ password_auth | ternary("yes", "no") }}'

- name: "Authentication | prohibit empty passwords"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PermitEmptyPasswords no'
    line: 'PermitEmptyPasswords no'
    validate: sshd -f %s -t

- name: "Authentication | configure challenge-response authentication as {{ challenge_response_auth | ternary('yes', 'no') }}"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication'
    line: 'ChallengeResponseAuthentication {{ challenge_response_auth | ternary("yes", "no") }}'
    validate: sshd -f %s -t

- name: "Authentication | restrict authentication methods"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AuthenticationMethods'
    line: 'AuthenticationMethods publickey {{ password_auth | ternary("password", "") }}'
    validate: sshd -f %s -t
